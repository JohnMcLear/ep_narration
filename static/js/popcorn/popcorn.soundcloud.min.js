(function () {
  let l = !1; let m = !1; Popcorn.player('soundcloud', {_canPlayType(d, e) { return /(?:http:\/\/www\.|http:\/\/|www\.|\.|^)(soundcloud)/.test(e) && 'video' !== d.toLowerCase(); }, _setup(d) {
    function e() {
      l = !0; SC.initialize({client_id: 'PRaNFlda6Bhf5utPjUsptg'}); SC.get('/resolve', {url: a.src}, (e) => {
        a.width = a.style.width ? `${a.offsetWidth}` : '560'; a.height = a.style.height ? `${a.offsetHeight}` : '315'; c.scrolling = 'no'; c.frameborder = 'no'; c.id = `soundcloud-${Popcorn.guid()}`; c.src = `http://w.soundcloud.com/player/?url=${
          e.uri}&show_artwork=true&buying=false&liking=false&sharing=false&download=false&show_playcount=false`; c.width = '100%'; c.height = '100%'; d.loadListener = function () {
          d.widget = b = SC.Widget(c.id); b.bind(SC.Widget.Events.FINISH, () => { a.pause(); a.dispatchEvent('ended'); }); b.bind(SC.Widget.Events.PLAY_PROGRESS, (b) => { i = b.currentPosition / 1E3; a.dispatchEvent('timeupdate'); }); b.bind(SC.Widget.Events.PLAY, () => { h = j = !1; a.dispatchEvent('play'); a.dispatchEvent('playing'); a.currentTime = i; g.next(); }); b.bind(SC.Widget.Events.PAUSE, () => {
            h =
j = !0; a.dispatchEvent('pause'); g.next();
          }); b.bind(SC.Widget.Events.READY, () => { b.getDuration((b) => { n = b / 1E3; a.style.visibility = 'visible'; a.dispatchEvent('durationchange'); a.readyState = 4; a.dispatchEvent('readystatechange'); a.dispatchEvent('loadedmetadata'); a.dispatchEvent('loadeddata'); a.dispatchEvent('canplaythrough'); a.dispatchEvent('load'); !a.paused && a.play(); }); b.getVolume((a) => { f = a / 100; }); });
        }; c.addEventListener('load', d.loadListener, !1); a.appendChild(c);
      });
    } var a = this; var c = document.createElement('iframe');
    var f = 1; var i = 0; var h = !0; var j = !0; let b; var n = 0; let k = !1; var g = Popcorn.player.playerQueue(); d._container = c; a.style.visibility = 'hidden'; a.play = function () { h = !1; g.add(() => { j ? b && b.play() : g.next(); }); }; a.pause = function () { h = !0; g.add(() => { j ? g.next() : b && b.pause(); }); }; Object.defineProperties(a, {muted: {set(c) { c ? (b && b.getVolume((a) => { f = a / 100; }), b && b.setVolume(0), k = !0) : (b && b.setVolume(100 * f), k = !1); a.dispatchEvent('volumechange'); }, get() { return k; }}, volume: {set(c) { b && b.setVolume(100 * c); f = c; a.dispatchEvent('volumechange'); },
      get() { return k ? 0 : f; }}, currentTime: {set(c) { i = c; b && b.seekTo(1E3 * c); a.dispatchEvent('seeked'); a.dispatchEvent('timeupdate'); }, get() { return i; }}, duration: {get() { return n; }}, paused: {get() { return h; }}}); l ? e() : m ? function o() { setTimeout(() => { l ? e() : o(); }, 100); }() : (m = !0, Popcorn.getScript('http://w.soundcloud.com/player/api.js', () => { Popcorn.getScript('http://connect.soundcloud.com/sdk.js', () => { e(); }); }));
  }, _teardown(d) {
    const e = d.widget; const a = SC.Widget.Events;
    const c = d._container; d.destroyed = !0; if (e) for (const f in a)e && e.unbind(a[f]); else c.removeEventListener('load', d.loadEventListener, !1);
  }});
})();
